name: docs

on:
  push:
    branches: main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    environment:
      name: github-pages
      url: {% raw %} ${{ steps.deployment.outputs.page_url }} {% endraw %}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - name: Install dependencies for Python {% raw %} "${{ matrix.python-version }}" {% endraw %}
        uses: actions/setup-python@v3
        with:
          python-version: {% raw %} "${{ matrix.python-version }}" {% endraw %}
          cache: 'poetry'
      - run: |
          poetry env use "{% raw %} "${{ matrix.python-version }}" {% endraw %}"
          poetry install
          # install a version of pytorch that does not require a GPU / CUDA
          poetry run pip install torch --extra-index-url https://download.pytorch.org/whl/cpu --force
      - name: Docs
        run: |
          poetry run sphinx-build -b html docs gh-pages
      - name: Coverage
        run: |
          poetry run coverage run -m pytest
          echo "COVERAGE=$(poetry run coverage report --precision 2 | grep TOTAL | tr -s ' ' | cut -f 4 -d " ")" >> $GITHUB_ENV
          poetry run coverage html --directory gh-pages/coverage
          rm -f gh-pages/coverage/.gitignore
{% if cookiecutter.coverage_gist %}
      - name: Create Coverage Badge
        uses: schneegans/dynamic-badges-action@v1.1.0
        with:
          auth: {{ "${{ secrets.GIST_SECRET }}" }}
          gistID: {{ cookiecutter.coverage_gist }}
          filename: coverage-badge.json
          label: coverage
          message: {{ "${{ env.COVERAGE }}" }}
          color: green
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: 'gh-pages'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2    
{% endif %}        