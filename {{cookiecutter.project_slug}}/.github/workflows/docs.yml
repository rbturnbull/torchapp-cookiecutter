name: docs

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v4

      - name: Install poetry
        run: pipx install poetry

      - name: Initialise Python {% raw %}${{ matrix.python-version }}{% endraw %}
        uses: actions/setup-python@v5
        with:
          python-version: {% raw %}${{ matrix.python-version }}{% endraw %}
          cache: poetry

      - name: Install dependencies for Python {% raw %}${{ matrix.python-version }}{% endraw %}
        run: |
          poetry env use "{% raw %}${{ matrix.python-version }}{% endraw %}"
          poetry install

      - name: Build Sphinx docs
        run: poetry run sphinx-build -b html docs gh-pages

      - name: Run tests and generate coverage report
        run: |
          poetry run coverage run -m pytest
          echo "COVERAGE=$(poetry run coverage report --precision 2 | grep TOTAL | tr -s ' ' | cut -f 4 -d " ")" >> $GITHUB_ENV
          poetry run coverage html --directory gh-pages/coverage
          rm -f gh-pages/coverage/.gitignore

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'gh-pages'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

{% if cookiecutter.coverage_gist %}
      - name: Create Coverage Badge
        uses: schneegans/dynamic-badges-action@v1.1.0
        with:
          auth: {% raw %} ${{ secrets.GIST_SECRET }} {% endraw %}
          gistID: {{ cookiecutter.coverage_gist }}
          filename: coverage-badge.json
          label: coverage
          message: {% raw %} ${{ env.COVERAGE }} {% endraw %}
          color: green
{% endif %}
